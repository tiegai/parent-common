version = releaseVersion

dependencies {
    implementation(rootProject)
    implementation(project(":model"))
    implementation(project(":mongo"))
    
    implementation("org.springframework.data:spring-data-mongodb")
    implementation("com.fasterxml.jackson.core:jackson-core")
    implementation("com.fasterxml.jackson.core:jackson-databind")
    implementation("org.apache.commons:commons-lang3")
    implementation("org.springframework:spring-web")
    implementation("org.springframework:spring-webmvc")
    implementation("org.springframework.boot:spring-boot-starter-aop")
    implementation("org.apache.tomcat.embed:tomcat-embed-core")
    // Swagger UI
    implementation("io.springfox:springfox-swagger2:2.10.5")
    implementation("io.springfox:springfox-swagger-ui:2.10.5")
    implementation("com.github.xiaoymin:knife4j-openapi2-spring-boot-starter:4.0.0")
    // Wingtips
    implementation("com.nike.wingtips:wingtips-spring-boot:${wingtipsVersion}") {
        exclude group: 'org.springframework', module: 'spring-web'
        exclude group: 'org.springframework.boot', module: 'spring-boot-autoconfigure'
    }
    // Test dependencies
    testImplementation("junit:junit")
    testImplementation("org.mockito:mockito-core")
    testImplementation("org.mockito:mockito-inline")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    
    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")
}

test {
    useJUnitPlatform()
}
